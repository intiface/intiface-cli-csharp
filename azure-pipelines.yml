trigger:
  branches:
    include:
      - master
      - dev

pr:
  branches:
    include:
      - master
      - dev

variables:
  solution: 'IntifaceCLI.sln'
  buildPlatform: 'Any CPU'

jobs:
  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      matrix:
        # Debug:
        #   buildConfiguration: Debug
        Release:
          buildConfiguration: Release
    steps:
      - template: build/build-start.yml
        parameters:
          platform: "win-x64"
      # Set up key after build start, otherwise we won't have nuget to update yet.
      - template: build/setup-signing-key.yml
      - task: VSBuild@1
        displayName: "Build Project"
        inputs:
          solution: '$(solution)'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          maximumCpuCount: true
      - task: PowerShell@2
        displayName: 'Sign CLI Executable in tree'
        inputs:
          targetType: inline
          script: |
            Set-Alias Signtool 'C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe'
            Signtool sign /f SigningCert.pfx /p "$(NPLabsRepoSigningKey)" /tr http://timestamp.comodoca.com/rfc3161 $(System.DefaultWorkingDirectory)\IntifaceCLI\bin\$(buildConfiguration)\net47\IntifaceCLI.exe
      - task: PowerShell@2
        displayName: "Build CLI Installer"
        inputs:
          targetType: inline
          script: |
            $Env:CONFIGURATION = "$(buildConfiguration)"
            $Env:BUILD_VERSION = "$(gitVersion)"
            cinst -y --no-progress innosetup
            ISCC intiface-cli-installer.iss
            move installer\intiface-cli-installer.exe installer\$(cliBuildName)-installer.exe
      - task: PowerShell@2
        displayName: 'Sign CLI Installer'
        inputs:
          targetType: inline
          script: |
            Set-Alias Signtool 'C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe'
            Signtool sign /f SigningCert.pfx /p "$(NPLabsRepoSigningKey)" /tr http://timestamp.comodoca.com/rfc3161 $(System.DefaultWorkingDirectory)\installer\$(cliBuildName)-installer.exe
      - task: CopyFiles@2
        displayName: "Copy installer to staging"
        inputs:
          contents: "$(System.DefaultWorkingDirectory)/installer/*.exe"
          targetFolder: '$(Build.ArtifactStagingDirectory)'
          flattenFolders: true
      - task: CopyFiles@2
        displayName: "Copy bare program for Unity distribution"
        condition: and(succeeded(), eq(variables['buildConfiguration'], 'Release'))
        inputs:
          contents: |
            "$(System.DefaultWorkingDirectory)/IntifaceCLI/bin/Release/*.exe"
            "$(System.DefaultWorkingDirectory)/IntifaceCLI/bin/Release/*.dll"
            "$(System.DefaultWorkingDirectory)/IntifaceCLI/bin/Release/*.config"
            "$(System.DefaultWorkingDirectory)/README.md"
            "$(System.DefaultWorkingDirectory)/LICENSE.md"
          targetFolder: '$(Build.ArtifactStagingDirectory)/IntifaceCLIUnity'
          flattenFolders: true
      - task: ArchiveFiles@2
        displayName: "Archive unity artifacts"
        condition: and(succeeded(), eq(variables['buildConfiguration'], 'Release'))
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/ButtplugUnity"
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/intiface-cli-unity-$(gitVersion).zip"
          includeRootFolder: false      
      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'win-x64-$(buildConfiguration)'
  - job: Deploy
    dependsOn:
      - Windows
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/dev'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - template: build/setup-variables.yml
      - task: DownloadPipelineArtifact@1
        displayName: Download Artifacts from other jobs
        inputs:
          buildType: 'current'
      - task: GitHubRelease@0
        displayName: Upload CLI Prerelease to Github
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
        inputs:
          gitHubConnection: "release"
          repositoryName: "intiface/intiface-cli-csharp"
          action: "edit"
          tagSource: "manual"
          tag: "420.69.666"
          title: "IntifaceCLI C# Prerelease"
          assets: |
            $(System.ArtifactsDirectory)\**\*.zip
            $(System.ArtifactsDirectory)\**\*installer.exe
          isPreRelease: true
      - task: GitHubRelease@0
        displayName: Upload CLI Release to Github
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          gitHubConnection: "release"
          repositoryName: "intiface/intiface-cli-csharp"
          action: "create"
          tagSource: "auto"
          title: "Intiface CLI C# $(gitVersion)"
          assets: |
            $(System.ArtifactsDirectory)\**\*.zip
            $(System.ArtifactsDirectory)\**\*installer.exe
          isPreRelease: false
